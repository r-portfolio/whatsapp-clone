const firebase = require("firebase");
require("firebase/firestore");

export class Firebase {
  constructor() {
    // For security reasons the configuration file was not added here.
    //  Because this configuration is generated by the Firebase
    // itself, that is, they are personal configurations of each project.
    this._config = {
      apiKey: "api-key",
      authDomain: "auth-domain",
      databaseURL: "databaseURL",
      projectId: "project-id",
      storageBucket: "storage-bucket",
      messagingSenderId: "messaging-sender-id",
      appId: "app-id"
    };
    this.init();
  }

  init() {
    if (!window._initializedFirebase) {
      // Initialize Firebase
      firebase.initializeApp(this._config);

      firebase.firestore().settings({
        // timestampsInSnapshots: true
      });

      window._initializedFirebase = true;
    }
  }

  static db() {
    return firebase.firestore();
  }

  static hd() {
    return firebase.storage();
  }

  /**
   * @returns {Promise} Authentication in Firebase (User + Token).
   */

  initAuth() {
    return new Promise((s, f) => {
      let provider = new firebase.auth.GoogleAuthProvider();
      firebase
        .auth()
        .signInWithPopup(provider)
        .then(result => {
          let token = result.credential.accessToken;
          let user = result.user;

          s({ user, token });
        })
        .catch(err => {
          f(err);
        });
    });
  }
}
